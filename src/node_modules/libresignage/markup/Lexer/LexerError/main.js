var MarkupError = require('libresignage/markup/MarkupError');

/**
* Error class for Lexer errors.
*
* @memberof libresignage/markup
*/
class LexerError extends MarkupError {
	/**
	* Construct a new LexerError object.
	*
	* @param {number} code    One of the error codes defined in MarkupError.
	* @param {string} message A message string.
	* @param {number} ln_num  The line number where the error occured.
	* @param {number} ln_pos  The line position where the error occured.
	* @param {string} file    Passed to the Error constructor.
	*/
	constructor(code, message, ln_num, ln_pos, file) {
		super(message, file, ln_num);
		if (Error.captureStackTrace) {
			Error.captureStackTrace(this, LexerError);
		}

		this.code = code;
		this.ln_num = ln_num;
		this.ln_pos = ln_pos;
		this.message = message;
	}

	/**
	* Get a string representation of a LexerError.
	*
	* @param {number} ln_base A number to add to the reported line number.
	*/
	toString(ln_base) {
		let base = (!ln_base) ? 0 : ln_base;
		let ret =  `${MarkupError.msg_by_code(this.code)}: ${this.message}`;

		if (this.ln_num != null && this.ln_pos != null) {
			ret += ` (@ ${base + this.ln_num}:${this.ln_pos})`;
		}

		return ret;
	}
}
module.exports = LexerError;
