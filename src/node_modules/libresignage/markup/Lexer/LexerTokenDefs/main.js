var Token = require('libresignage/markup/Lexer/Token');
var TokenContext = require('libresignage/markup/Lexer/TokenContext');
var TokenStore = require('libresignage/markup/Lexer/TokenStore');

var tokens = new TokenStore();

tokens.add(new Token(
	'BRACK_OPEN',
	[/^\[/],
	'[',
	[new TokenContext({'-1': '!BACKWARD_SLASH'})]
));
tokens.add(new Token(
	'BRACK_CLOSE',
	[/^\]/],
	']',
	[new TokenContext({'-1': '!BACKWARD_SLASH'})]
));
tokens.add(new Token(
	'FORWARD_SLASH',
	[/^\//],
	'/',
	[new TokenContext({'-1': '!BACKWARD_SLASH'})]
));
tokens.add(new Token(
	'BACKWARD_SLASH',
	[/^\\/],
	'\\',
	[new TokenContext({'-1': '!BACKWARD_SLASH'})]
));
tokens.add(new Token(
	'ASSIGN',
	[/^=/],
	'=',
	[new TokenContext({'-1': '!BACKWARD_SLASH'})]
));
tokens.add(new Token(
	'WHITESPACE',
	[/^\s+/],
	'(whitespace)',
	[new TokenContext({})]
));
tokens.add(new Token(
	'DBL_QUOTE',
	[/^"/],
	'"',
	[new TokenContext({'-1': '!BACKWARD_SLASH'})]
));
tokens.add(new Token(
	'SNGL_QUOTE',
	[/^'/],
	"'",
	[new TokenContext({'-1': '!BACKWARD_SLASH'})]
));
tokens.add(new Token(
	'CHARACTER',
	[/^.{1}/],
	"(character)",
	[new TokenContext({})]
));

// Post-processor created tokens.
tokens.add(new Token(
	'TAGNAME',
	null,
	'(tagname)',
	[new TokenContext({})],
	true
));
tokens.add(new Token(
	'IDENTIFIER',
	null,
	'(identifier)',
	[new TokenContext({})],
	true
));
tokens.add(new Token(
	'STR_LITERAL',
	null,
	'(string literal)',
	[new TokenContext({})],
	true
));
tokens.add(new Token(
	'LITERAL',
	null,
	'(literal)',
	[new TokenContext({})],
	true
));

module.exports = tokens;

