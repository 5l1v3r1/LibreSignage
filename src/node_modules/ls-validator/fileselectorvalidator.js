var $ = require('jquery');
var BaseValidator = require('./basevalidator.js');

module.exports = class FileSelectorValidator extends BaseValidator {
	/*
	*  Validate a file selector input.
	*
	*  Settings:
	*    * mimes     = An array of accepted file MIME types.
	*    * name_len  = The maximum allowed filename length.
	*    * regex     = A "whitelist" regex for filenames.
	*    * minfiles  = Minimum number of selected files.
	*    * bl        = A blacklist of files to disallow.
	*                  This can be a getter function or an
	*                  array.
	*/
	constructor(...args) {
		super(...args);
		this.chk_settings(
			['mimes', 'name_len', 'regex', 'minfiles', 'bl']
		);
	}

	validate(element) {
		let bl;
		let {mimes, name_len, regex, minfiles} = this.settings;

		if (typeof this.settings.bl === 'function') {
			bl = this.settings.bl();
		} else {
			bl = this.settings.bl;
		}

		if (minfiles != null && element.files.length < minfiles) {
			return false;
		}

		for (let i = 0; i < element.files.length; i++) {
			if (
				(
					name_len != null
					&& element.files.item(i).name.length > name_len
				) || (
					mimes != null
					&& !mimes.includes(element.files.item(i).type)
				) || (
					regex != null
					&& !element.files.item(i).name.match(regex)
				) || (
					bl != null
					&& bl.length != 0
					&& bl.includes(element.files.item(i).name)
				)
			) {
				return false;
			}
		}
		return true;
	}
}
